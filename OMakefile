
USE_OCAMLFIND = true
NATIVE_ENABLED = true
BYTE_ENABLED = true

prefix = /usr/local
INSTALL = install
RM = rm -f

.PHONY: clean

OCAMLOPTFLAGS += -g -inline 100

.PHONY: install
.PHONY: uninstall

.SUBDIRS: src/libs/ocaml-leveldb

if $(defined EXTPROT_DIR)
    EXTPROT_BASE = $(EXTPROT_DIR)
    export
else
    EXTPROT_BASE = $(file src/libs/extprot)
    .SUBDIRS: src/libs/extprot
    export

OCAMLFLAGS     = -g -bin-annot -thread -w +a-4-6-9-27..29-32..99 -warn-error +a-4-6-9-18-27-28-29..99
OCAMLFINDFLAGS = -syntax camlp4o

OCAMLPACKS[] = batteries camlp4.macro cryptokit lwt lwt.unix lwt.syntax lwt.preemptive

if $(eq $(shell-code ocamlfind query lwt.text 2>/dev/null), 0)
    OCAMLFINDFLAGS += -ppopt -DHAS_LWT_TEXT
    OCAMLPACKS[]   += lwt.text
    export OCAMLFINDFLAGS
    export OCAMLPACKS

LD_PATHS[] =
	$(file src/libs/ocaml-leveldb/leveldb)
	$(file src/libs/ocaml-leveldb/src)
	$(file src)
	$(file src/core)

setenv(CAML_LD_LIBRARY_PATH, $(concat :, $(absname $(LD_PATHS))))

# Link flags used by CamlStubLibrary
LINK_FLAGS =

public.CamlStubLibrary(dst, objects, stubs) =
    private.stub_objects = $(addsuffix .o, $(stubs))
    $(dst).cma $(dst).a dllcaml$(dst).so $(dst).cmxa: \
	$(stub_objects) $(addsuffixes .cmo .cmx, $(objects))
        ocamlmklib -verbose -oc caml$(dst) -o $(dst) \
	    $(stub_objects) \
	    $(OCamlLinkSort $(addsuffixes .cmo, $(objects))) \
	    $(OCamlLinkSort $(addsuffixes .cmx, $(objects))) \
	    $(LINK_FLAGS)

CamlSources(mods) =
        foreach(mod, $(mods))
                $(addsuffixes .cmo .cmi .cmx .sig $(EXT_OBJ), $(mod)):

.SUBDIRS: doc src test

EXECS[] = obigstore ob_dump ob_load ob_repl
LIBS[] = src/core/obigstore_core src/client/obigstore_client

LIBS = $(addsuffixes .cma .cmxa, $(LIBS))

foreach(exec, $(EXECS))
    $(exec): src/$(exec)$(EXE)
        ln-or-cp $< $@

.DEFAULT: $(EXECS) $(LIBS)

install: $(EXECS) $(LIBS)
	$(INSTALL) $+ $(prefix)/bin
	ocamlfind install obigstore META \
	    $(cd src/core, $(ls *.cmi *.so *.cmxa *.cma *.cmx *.a *.mli)) \
	    $(cd src/client, $(ls *.cmi *.cmxa *.cma *.cmx *.a *.mli))

uninstall:
	$(RM) $(addprefix $(prefix)/, $(EXECS))
	ocamlfind remove obigstore

clean:
	rm -f $(filter-proper-targets $(ls R, .))
