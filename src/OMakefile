
OCAMLINCLUDES += $(file libs/ocaml-leveldb/src libs/extprot/runtime)

CFLAGS += -g -Wall -O2 -I$(file libs/ocaml-leveldb/leveldb/include) -fPIC

%.o: %.c
	$(OCAMLC) -cc g++ $(mapprefix -ccopt, $(CFLAGS)) -c $^

.SUBDIRS: core client server

public.LnLibAndPack(dir, name) =
    public.Targets(x) =
      return($(addsuffixes .cma .cmxa .cmx .cmi .a .o, $(x)))

    foreach(f, $(Targets $(name)))
	$(f): $(dir)/$(f)
	    ln-or-cp $(file $^) $(file $@)

LnLibAndPack(core, obigstore_core)
LnLibAndPack(client, obigstore_client)
LnLibAndPack(server, obigstore_server)

section
    OCAMLPACKS[] += unix extlib threads oUnit
    OCAML_LIBS[] +=
	libs/ocaml-leveldb/src/leveldb
	libs/extprot/runtime/extprot
	obigstore_core
    OCAMLFLAGS += -cclib -L$(ROOT)/src/libs/ocaml-leveldb/leveldb \
		  -cclib -L$(ROOT)/src/libs/ocaml-leveldb/src \
		  -cclib -L$(ROOT)/src/core

    section
	OCAML_LIBS[] += obigstore_client
	OCamlProgram(ob_dump, ob_dump)
	OCamlProgram(ob_load, ob_load)
	OCamlProgram(ob_repl, ob_repl)

    section
        OCAML_LIBS[] += obigstore_server
	OCamlProgram(obigstore, run_server)

    TOPLEVEL_LIBS[] =
	libs/ocaml-leveldb/src/leveldb
	libs/extprot/runtime/extprot
	obigstore_core
	obigstore_client
	obigstore_server

    toplevel: $(addsuffix .cma, $(TOPLEVEL_LIBS))
	    ocamlfind ocamlmktop \
		$(mapprefix -package, $(OCAMLPACKS)) \
		-cc g++ -o toplevel \
		-cclib -L. \
		-cclib -Lcore \
		-cclib -Llibs/ocaml-leveldb/src \
		$(addsuffix .cma, $(TOPLEVEL_LIBS)) \
		-linkpkg -thread

.DEFAULT: obigstore$(EXE) ob_dump$(EXE) ob_load$(EXE) ob_repl$(EXE)


